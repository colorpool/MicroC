// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | INCREASE
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | IN
  | RANGE
  | SWITCH
  | CASE
  | DEFAULT
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_INCREASE
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_RANGE
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_DEFAULT
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type
    | NONTERM_StmtCase

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | NOT  -> 12 
  | SEQOR  -> 13 
  | SEQAND  -> 14 
  | EQ  -> 15 
  | NE  -> 16 
  | GT  -> 17 
  | LT  -> 18 
  | GE  -> 19 
  | LE  -> 20 
  | PLUS  -> 21 
  | MINUS  -> 22 
  | TIMES  -> 23 
  | DIV  -> 24 
  | MOD  -> 25 
  | INCREASE  -> 26 
  | CHAR  -> 27 
  | ELSE  -> 28 
  | IF  -> 29 
  | INT  -> 30 
  | NULL  -> 31 
  | PRINT  -> 32 
  | PRINTLN  -> 33 
  | RETURN  -> 34 
  | VOID  -> 35 
  | WHILE  -> 36 
  | FOR  -> 37 
  | IN  -> 38 
  | RANGE  -> 39 
  | SWITCH  -> 40 
  | CASE  -> 41 
  | DEFAULT  -> 42 
  | CSTSTRING _ -> 43 
  | NAME _ -> 44 
  | CSTINT _ -> 45 
  | CSTBOOL _ -> 46 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_NOT 
  | 13 -> TOKEN_SEQOR 
  | 14 -> TOKEN_SEQAND 
  | 15 -> TOKEN_EQ 
  | 16 -> TOKEN_NE 
  | 17 -> TOKEN_GT 
  | 18 -> TOKEN_LT 
  | 19 -> TOKEN_GE 
  | 20 -> TOKEN_LE 
  | 21 -> TOKEN_PLUS 
  | 22 -> TOKEN_MINUS 
  | 23 -> TOKEN_TIMES 
  | 24 -> TOKEN_DIV 
  | 25 -> TOKEN_MOD 
  | 26 -> TOKEN_INCREASE 
  | 27 -> TOKEN_CHAR 
  | 28 -> TOKEN_ELSE 
  | 29 -> TOKEN_IF 
  | 30 -> TOKEN_INT 
  | 31 -> TOKEN_NULL 
  | 32 -> TOKEN_PRINT 
  | 33 -> TOKEN_PRINTLN 
  | 34 -> TOKEN_RETURN 
  | 35 -> TOKEN_VOID 
  | 36 -> TOKEN_WHILE 
  | 37 -> TOKEN_FOR 
  | 38 -> TOKEN_IN 
  | 39 -> TOKEN_RANGE 
  | 40 -> TOKEN_SWITCH 
  | 41 -> TOKEN_CASE 
  | 42 -> TOKEN_DEFAULT 
  | 43 -> TOKEN_CSTSTRING 
  | 44 -> TOKEN_NAME 
  | 45 -> TOKEN_CSTINT 
  | 46 -> TOKEN_CSTBOOL 
  | 49 -> TOKEN_end_of_input
  | 47 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtU 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_Expr 
    | 38 -> NONTERM_Expr 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_AtExprNotAccess 
    | 61 -> NONTERM_AtExprNotAccess 
    | 62 -> NONTERM_AtExprNotAccess 
    | 63 -> NONTERM_Access 
    | 64 -> NONTERM_Access 
    | 65 -> NONTERM_Access 
    | 66 -> NONTERM_Access 
    | 67 -> NONTERM_Access 
    | 68 -> NONTERM_Exprs 
    | 69 -> NONTERM_Exprs 
    | 70 -> NONTERM_Exprs1 
    | 71 -> NONTERM_Exprs1 
    | 72 -> NONTERM_Const 
    | 73 -> NONTERM_Const 
    | 74 -> NONTERM_Const 
    | 75 -> NONTERM_Const 
    | 76 -> NONTERM_Type 
    | 77 -> NONTERM_Type 
    | 78 -> NONTERM_StmtCase 
    | 79 -> NONTERM_StmtCase 
    | 80 -> NONTERM_StmtCase 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 49 
let _fsyacc_tagOfErrorTerminal = 47

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | INCREASE  -> "INCREASE" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | RANGE  -> "RANGE" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | DEFAULT  -> "DEFAULT" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | INCREASE  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | RANGE  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 16us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 73us; 54us; 74us; 54us; 84us; 54us; 111us; 54us; 112us; 54us; 193us; 54us; 197us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 116us; 14us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 73us; 75us; 74us; 75us; 84us; 85us; 111us; 113us; 112us; 114us; 193us; 194us; 197us; 198us; 6us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 115us; 74us; 117us; 50us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 69us; 72us; 70us; 71us; 73us; 48us; 74us; 48us; 78us; 79us; 80us; 81us; 82us; 83us; 84us; 48us; 87us; 88us; 99us; 102us; 100us; 101us; 103us; 106us; 104us; 105us; 107us; 110us; 108us; 109us; 111us; 48us; 112us; 48us; 123us; 124us; 126us; 152us; 132us; 133us; 134us; 135us; 153us; 137us; 154us; 138us; 155us; 139us; 156us; 140us; 157us; 141us; 158us; 142us; 159us; 143us; 160us; 144us; 161us; 145us; 162us; 146us; 163us; 147us; 164us; 148us; 165us; 150us; 167us; 149us; 168us; 149us; 179us; 151us; 182us; 152us; 193us; 48us; 197us; 48us; 50us; 65535us; 37us; 120us; 40us; 120us; 43us; 120us; 50us; 120us; 57us; 120us; 58us; 120us; 61us; 120us; 62us; 120us; 64us; 120us; 65us; 120us; 69us; 120us; 70us; 120us; 73us; 120us; 74us; 120us; 78us; 120us; 80us; 120us; 82us; 120us; 84us; 120us; 87us; 120us; 99us; 120us; 100us; 120us; 103us; 120us; 104us; 120us; 107us; 120us; 108us; 120us; 111us; 120us; 112us; 120us; 123us; 120us; 126us; 120us; 132us; 120us; 134us; 120us; 153us; 120us; 154us; 120us; 155us; 120us; 156us; 120us; 157us; 120us; 158us; 120us; 159us; 120us; 160us; 120us; 161us; 120us; 162us; 120us; 163us; 120us; 164us; 120us; 165us; 120us; 167us; 121us; 168us; 121us; 179us; 120us; 182us; 120us; 193us; 120us; 197us; 120us; 52us; 65535us; 37us; 122us; 40us; 122us; 43us; 122us; 50us; 122us; 57us; 122us; 58us; 122us; 61us; 122us; 62us; 122us; 64us; 122us; 65us; 122us; 69us; 122us; 70us; 122us; 73us; 122us; 74us; 122us; 78us; 122us; 80us; 122us; 82us; 122us; 84us; 122us; 87us; 122us; 99us; 122us; 100us; 122us; 103us; 122us; 104us; 122us; 107us; 122us; 108us; 122us; 111us; 122us; 112us; 122us; 123us; 122us; 126us; 122us; 132us; 122us; 134us; 122us; 153us; 122us; 154us; 122us; 155us; 122us; 156us; 122us; 157us; 122us; 158us; 122us; 159us; 122us; 160us; 122us; 161us; 122us; 162us; 122us; 163us; 122us; 164us; 122us; 165us; 122us; 167us; 122us; 168us; 122us; 176us; 178us; 179us; 122us; 182us; 122us; 191us; 192us; 193us; 122us; 197us; 122us; 56us; 65535us; 37us; 119us; 40us; 119us; 43us; 119us; 50us; 119us; 57us; 119us; 58us; 119us; 61us; 119us; 62us; 119us; 64us; 119us; 65us; 119us; 69us; 119us; 70us; 119us; 73us; 119us; 74us; 119us; 76us; 94us; 77us; 93us; 78us; 118us; 80us; 119us; 82us; 119us; 84us; 119us; 87us; 119us; 99us; 119us; 100us; 119us; 103us; 119us; 104us; 119us; 107us; 119us; 108us; 119us; 111us; 119us; 112us; 119us; 123us; 119us; 126us; 119us; 129us; 130us; 132us; 119us; 134us; 119us; 153us; 119us; 154us; 119us; 155us; 119us; 156us; 119us; 157us; 119us; 158us; 119us; 159us; 119us; 160us; 119us; 161us; 119us; 162us; 119us; 163us; 119us; 164us; 119us; 165us; 119us; 167us; 119us; 168us; 118us; 170us; 171us; 173us; 174us; 176us; 177us; 179us; 119us; 182us; 119us; 193us; 119us; 197us; 119us; 1us; 65535us; 126us; 127us; 2us; 65535us; 126us; 181us; 182us; 183us; 52us; 65535us; 37us; 166us; 40us; 166us; 43us; 166us; 50us; 166us; 57us; 166us; 58us; 166us; 61us; 166us; 62us; 166us; 64us; 166us; 65us; 166us; 69us; 166us; 70us; 166us; 73us; 166us; 74us; 166us; 78us; 166us; 80us; 166us; 82us; 166us; 84us; 166us; 87us; 166us; 99us; 166us; 100us; 166us; 103us; 166us; 104us; 166us; 107us; 166us; 108us; 166us; 111us; 166us; 112us; 166us; 123us; 166us; 126us; 166us; 132us; 166us; 134us; 166us; 153us; 166us; 154us; 166us; 155us; 166us; 156us; 166us; 157us; 166us; 158us; 166us; 159us; 166us; 160us; 166us; 161us; 166us; 162us; 166us; 163us; 166us; 164us; 166us; 165us; 166us; 167us; 166us; 168us; 166us; 176us; 166us; 179us; 166us; 182us; 166us; 191us; 166us; 193us; 166us; 197us; 166us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; 2us; 65535us; 90us; 91us; 194us; 195us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 50us; 54us; 59us; 74us; 81us; 132us; 183us; 236us; 293us; 295us; 298us; 351us; 360us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 33us; 1us; 23us; 14us; 24us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 14us; 26us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 33us; 34us; 1us; 28us; 3us; 28us; 33us; 34us; 16us; 28us; 33us; 34us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 28us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 28us; 3us; 28us; 33us; 34us; 1us; 28us; 1us; 28us; 2us; 28us; 33us; 1us; 28us; 1us; 29us; 2us; 29us; 35us; 1us; 29us; 2us; 29us; 35us; 15us; 29us; 35us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 29us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 29us; 2us; 29us; 35us; 1us; 29us; 2us; 30us; 32us; 3us; 30us; 32us; 36us; 2us; 30us; 64us; 14us; 30us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 30us; 14us; 30us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 30us; 14us; 30us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 14us; 31us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 3us; 32us; 36us; 67us; 2us; 32us; 67us; 1us; 32us; 2us; 32us; 36us; 1us; 32us; 2us; 32us; 36us; 1us; 32us; 2us; 32us; 36us; 15us; 32us; 36us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 32us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 32us; 2us; 32us; 36us; 15us; 32us; 36us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 32us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 32us; 2us; 32us; 36us; 15us; 32us; 36us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 32us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 32us; 2us; 32us; 36us; 1us; 32us; 2us; 32us; 36us; 1us; 33us; 1us; 34us; 1us; 35us; 5us; 37us; 40us; 43us; 64us; 67us; 4us; 37us; 40us; 43us; 67us; 1us; 38us; 2us; 38us; 61us; 1us; 39us; 1us; 40us; 14us; 40us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 2us; 41us; 63us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 42us; 2us; 42us; 67us; 1us; 43us; 1us; 44us; 14us; 44us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 45us; 14us; 45us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 1us; 46us; 14us; 47us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 47us; 48us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 47us; 48us; 49us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 47us; 48us; 49us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 47us; 48us; 49us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 47us; 48us; 49us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 14us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 14us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 14us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 13us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 14us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 14us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 67us; 15us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 70us; 71us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 2us; 61us; 64us; 1us; 61us; 1us; 62us; 2us; 62us; 67us; 1us; 63us; 1us; 64us; 2us; 64us; 67us; 1us; 64us; 2us; 65us; 66us; 2us; 65us; 67us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 69us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 2us; 78us; 79us; 2us; 78us; 79us; 2us; 78us; 79us; 2us; 78us; 79us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 80us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 123us; 125us; 128us; 130us; 145us; 147us; 149us; 151us; 155us; 157us; 161us; 178us; 193us; 195us; 199us; 201us; 203us; 206us; 208us; 210us; 213us; 215us; 218us; 234us; 249us; 251us; 254us; 256us; 259us; 263us; 266us; 281us; 283us; 298us; 300us; 315us; 317us; 319us; 321us; 323us; 338us; 340us; 342us; 344us; 346us; 350us; 353us; 355us; 358us; 360us; 363us; 365us; 368us; 384us; 399us; 401us; 404us; 420us; 435us; 437us; 440us; 456us; 471us; 473us; 476us; 478us; 481us; 483us; 485us; 487us; 493us; 498us; 500us; 503us; 505us; 507us; 522us; 525us; 527us; 529us; 531us; 533us; 536us; 538us; 540us; 555us; 557us; 572us; 574us; 589us; 604us; 619us; 634us; 649us; 664us; 679us; 694us; 709us; 724us; 739us; 754us; 768us; 783us; 798us; 814us; 816us; 818us; 820us; 822us; 824us; 826us; 828us; 830us; 832us; 834us; 836us; 838us; 840us; 842us; 844us; 847us; 849us; 851us; 854us; 856us; 858us; 861us; 863us; 866us; 869us; 871us; 873us; 875us; 877us; 879us; 881us; 883us; 885us; 887us; 889us; 891us; 893us; 895us; 898us; 901us; 904us; 907us; 909us; 911us; 913us; |]
let _fsyacc_action_rows = 199
let _fsyacc_actionTableElements = [|3us; 16386us; 27us; 190us; 30us; 189us; 35us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 27us; 190us; 30us; 189us; 35us; 23us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 23us; 14us; 44us; 12us; 3us; 32768us; 1us; 16us; 23us; 14us; 44us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 23us; 14us; 44us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 23us; 14us; 44us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 45us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 44us; 24us; 1us; 32768us; 1us; 25us; 2us; 16398us; 27us; 190us; 30us; 189us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 2us; 16398us; 27us; 190us; 30us; 189us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 2us; 32768us; 27us; 190us; 30us; 189us; 0us; 16401us; 20us; 16403us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 27us; 190us; 29us; 56us; 30us; 189us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 68us; 37us; 77us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 1us; 32768us; 4us; 39us; 0us; 16402us; 20us; 16403us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 27us; 190us; 29us; 56us; 30us; 189us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 68us; 37us; 77us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16404us; 1us; 32768us; 7us; 43us; 20us; 16403us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 27us; 190us; 29us; 56us; 30us; 189us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 68us; 37us; 77us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 28us; 65us; 0us; 16407us; 14us; 32768us; 7us; 49us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 0us; 16408us; 13us; 32768us; 1us; 168us; 7us; 51us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16409us; 14us; 32768us; 7us; 53us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 1us; 57us; 1us; 32768us; 1us; 58us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 14us; 32768us; 2us; 62us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 14us; 32768us; 2us; 61us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 18us; 32768us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 29us; 55us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 67us; 37us; 76us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 18us; 32768us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 29us; 56us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 68us; 37us; 77us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 1us; 32768us; 28us; 64us; 18us; 32768us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 29us; 55us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 67us; 37us; 76us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 18us; 32768us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 29us; 56us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 68us; 37us; 77us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16412us; 1us; 32768us; 1us; 69us; 1us; 32768us; 1us; 70us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 14us; 32768us; 2us; 74us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 14us; 32768us; 2us; 73us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 18us; 32768us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 29us; 55us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 67us; 37us; 76us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 18us; 32768us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 29us; 56us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 68us; 37us; 77us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16413us; 3us; 32768us; 1us; 78us; 23us; 176us; 44us; 172us; 3us; 32768us; 1us; 78us; 23us; 176us; 44us; 172us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 14us; 32768us; 7us; 80us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 14us; 32768us; 7us; 82us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 14us; 32768us; 2us; 84us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 18us; 32768us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 29us; 55us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 67us; 37us; 76us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16414us; 1us; 32768us; 1us; 87us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 14us; 32768us; 2us; 89us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 1us; 32768us; 3us; 90us; 2us; 32768us; 41us; 191us; 42us; 196us; 1us; 32768us; 4us; 92us; 0us; 16415us; 2us; 32768us; 5us; 179us; 38us; 96us; 2us; 32768us; 5us; 179us; 38us; 95us; 1us; 32768us; 39us; 97us; 1us; 32768us; 39us; 98us; 1us; 32768us; 1us; 99us; 1us; 32768us; 1us; 100us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 14us; 32768us; 8us; 104us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 14us; 32768us; 8us; 103us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 14us; 32768us; 8us; 108us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 14us; 32768us; 8us; 107us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 14us; 32768us; 2us; 112us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 14us; 32768us; 2us; 111us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 18us; 32768us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 29us; 55us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 67us; 37us; 76us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 18us; 32768us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 29us; 55us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 67us; 37us; 76us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16416us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 4us; 16421us; 2us; 175us; 5us; 179us; 9us; 123us; 26us; 131us; 3us; 16421us; 5us; 179us; 9us; 123us; 26us; 131us; 0us; 16422us; 1us; 16422us; 2us; 169us; 0us; 16423us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 13us; 16424us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 1us; 16447us; 1us; 126us; 12us; 16452us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 1us; 32768us; 2us; 128us; 0us; 16425us; 3us; 32768us; 1us; 173us; 23us; 176us; 44us; 172us; 1us; 16426us; 5us; 179us; 0us; 16427us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16428us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 13us; 16429us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 0us; 16430us; 3us; 16431us; 23us; 155us; 24us; 156us; 25us; 157us; 3us; 16432us; 23us; 155us; 24us; 156us; 25us; 157us; 0us; 16433us; 0us; 16434us; 0us; 16435us; 9us; 16436us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 9us; 16437us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 9us; 16438us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 9us; 16439us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 9us; 16440us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 9us; 16441us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 11us; 16442us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 13us; 32768us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 12us; 16443us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 14us; 32768us; 6us; 180us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 14us; 16454us; 8us; 182us; 13us; 165us; 14us; 164us; 15us; 158us; 16us; 159us; 17us; 160us; 18us; 161us; 19us; 162us; 20us; 163us; 21us; 153us; 22us; 154us; 23us; 155us; 24us; 156us; 25us; 157us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16444us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16445us; 3us; 32768us; 1us; 173us; 23us; 176us; 44us; 172us; 1us; 16446us; 5us; 179us; 0us; 16447us; 3us; 32768us; 1us; 173us; 23us; 176us; 44us; 172us; 2us; 32768us; 2us; 175us; 5us; 179us; 0us; 16448us; 8us; 32768us; 1us; 168us; 10us; 170us; 22us; 186us; 23us; 176us; 31us; 188us; 44us; 172us; 45us; 184us; 46us; 185us; 1us; 16449us; 5us; 179us; 0us; 16450us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16451us; 0us; 16453us; 12us; 32768us; 1us; 168us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 31us; 188us; 32us; 134us; 33us; 136us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 1us; 32768us; 45us; 187us; 0us; 16458us; 0us; 16459us; 0us; 16460us; 0us; 16461us; 6us; 32768us; 1us; 167us; 10us; 170us; 22us; 186us; 31us; 188us; 45us; 184us; 46us; 185us; 1us; 32768us; 11us; 193us; 18us; 32768us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 29us; 55us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 67us; 37us; 76us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 2us; 16462us; 41us; 191us; 42us; 196us; 0us; 16463us; 1us; 32768us; 11us; 197us; 18us; 32768us; 1us; 168us; 3us; 37us; 10us; 170us; 12us; 132us; 22us; 186us; 23us; 176us; 26us; 129us; 29us; 55us; 31us; 188us; 32us; 134us; 33us; 136us; 34us; 50us; 36us; 67us; 37us; 76us; 40us; 86us; 44us; 125us; 45us; 184us; 46us; 185us; 0us; 16464us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 21us; 25us; 27us; 28us; 30us; 34us; 36us; 40us; 43us; 44us; 47us; 48us; 50us; 51us; 53us; 55us; 58us; 60us; 62us; 63us; 66us; 68us; 70us; 71us; 72us; 74us; 77us; 78us; 99us; 101us; 102us; 123us; 124us; 126us; 147us; 148us; 149us; 151us; 152us; 167us; 168us; 182us; 183us; 198us; 199us; 200us; 202us; 204us; 217us; 230us; 245us; 260us; 279us; 298us; 300us; 319us; 338us; 339us; 341us; 343us; 356us; 369us; 384us; 399us; 418us; 437us; 438us; 442us; 446us; 459us; 474us; 487us; 502us; 515us; 530us; 549us; 550us; 552us; 565us; 580us; 582us; 585us; 587us; 588us; 591us; 594us; 596us; 598us; 600us; 602us; 615us; 628us; 643us; 658us; 671us; 684us; 699us; 714us; 727us; 740us; 755us; 770us; 789us; 808us; 809us; 810us; 811us; 812us; 813us; 818us; 822us; 823us; 825us; 826us; 839us; 853us; 855us; 868us; 870us; 871us; 875us; 877us; 878us; 891us; 892us; 905us; 919us; 920us; 924us; 928us; 929us; 930us; 931us; 941us; 951us; 961us; 971us; 981us; 991us; 1003us; 1017us; 1030us; 1045us; 1060us; 1073us; 1086us; 1099us; 1112us; 1125us; 1138us; 1151us; 1164us; 1177us; 1190us; 1203us; 1216us; 1229us; 1230us; 1243us; 1256us; 1257us; 1261us; 1263us; 1264us; 1268us; 1271us; 1272us; 1281us; 1283us; 1284us; 1297us; 1298us; 1299us; 1312us; 1313us; 1314us; 1315us; 1317us; 1318us; 1319us; 1320us; 1321us; 1328us; 1330us; 1349us; 1352us; 1353us; 1355us; 1374us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 9us; 7us; 12us; 7us; 5us; 5us; 12us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; 4us; 5us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 16417us; 16418us; 16419us; 65535us; 65535us; 16422us; 65535us; 16423us; 65535us; 65535us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16444us; 65535us; 65535us; 16445us; 65535us; 65535us; 16447us; 65535us; 65535us; 16448us; 65535us; 65535us; 16450us; 65535us; 16451us; 16453us; 65535us; 16455us; 16456us; 16457us; 65535us; 16458us; 16459us; 16460us; 16461us; 65535us; 65535us; 65535us; 65535us; 16463us; 65535us; 65535us; 16464us; |]
let _fsyacc_reductions ()  =    [| 
# 455 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 464 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "CPar.fsy"
                                                               Prog _1 
                   )
# 46 "CPar.fsy"
                 : Absyn.program));
# 475 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               [] 
                   )
# 51 "CPar.fsy"
                 : 'gentype_Topdecs));
# 485 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 52 "CPar.fsy"
                 : 'gentype_Topdecs));
# 497 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdec));
# 508 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               _1 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdec));
# 519 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 75 "CPar.fsy"
                 : 'gentype_Vardec));
# 531 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 86 "CPar.fsy"
                 : 'gentype_Vardesc));
# 542 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 94 "CPar.fsy"
                 : 'gentype_Vardesc));
# 553 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               _2                                      
                   )
# 96 "CPar.fsy"
                 : 'gentype_Vardesc));
# 564 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 98 "CPar.fsy"
                 : 'gentype_Vardesc));
# 575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 100 "CPar.fsy"
                 : 'gentype_Vardesc));
# 587 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 105 "CPar.fsy"
                 : 'gentype_Fundec));
# 600 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 107 "CPar.fsy"
                 : 'gentype_Fundec));
# 614 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               [] 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 624 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               _1 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 635 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               [_1]     
                   )
# 117 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 658 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               Block _2 
                   )
# 123 "CPar.fsy"
                 : 'gentype_Block));
# 669 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               [] 
                   )
# 127 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 679 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 128 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 691 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 129 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 703 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               _1 
                   )
# 133 "CPar.fsy"
                 : 'gentype_Stmt));
# 714 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               _1 
                   )
# 134 "CPar.fsy"
                 : 'gentype_Stmt));
# 725 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtM));
# 736 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               Return None          
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtM));
# 746 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 757 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               _1                   
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 768 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 781 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 793 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                                            For(_3,_5,_7,_9)  
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 807 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                                          Switch(_3,_6)
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 819 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_Expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_Expr in
            let _12 = parseState.GetInput(12) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                                                         ForIn(_2, _6, _8, _10, _12)
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 834 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtU));
# 847 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtU));
# 859 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtU));
# 871 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_Expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_Expr in
            let _12 = parseState.GetInput(12) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                                                         ForIn(_2, _6, _8, _10, _12)
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtU));
# 886 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               Access _1           
                   )
# 157 "CPar.fsy"
                 : 'gentype_Expr));
# 897 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               _1                  
                   )
# 158 "CPar.fsy"
                 : 'gentype_Expr));
# 908 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               _1                  
                   )
# 162 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 919 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 163 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 931 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 164 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 943 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               Increase(_2)        
                   )
# 165 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 954 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Increase(_1)        
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 965 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 976 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 987 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 997 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1009 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1021 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1033 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1045 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1057 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1069 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1081 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1093 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1105 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1117 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1129 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1141 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1153 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               CstI _1             
                   )
# 190 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1164 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               _2                  
                   )
# 191 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1175 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Addr _2             
                   )
# 192 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1186 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               AccVar _1           
                   )
# 196 "CPar.fsy"
                 : 'gentype_Access));
# 1197 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               _2                  
                   )
# 197 "CPar.fsy"
                 : 'gentype_Access));
# 1208 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 198 "CPar.fsy"
                 : 'gentype_Access));
# 1219 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 199 "CPar.fsy"
                 : 'gentype_Access));
# 1230 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 200 "CPar.fsy"
                 : 'gentype_Access));
# 1242 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               []       
                   )
# 204 "CPar.fsy"
                 : 'gentype_Exprs));
# 1252 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               _1       
                   )
# 205 "CPar.fsy"
                 : 'gentype_Exprs));
# 1263 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               [_1]     
                   )
# 209 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1274 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 210 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1286 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               _1       
                   )
# 214 "CPar.fsy"
                 : 'gentype_Const));
# 1297 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               _1       
                   )
# 215 "CPar.fsy"
                 : 'gentype_Const));
# 1308 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               - _2     
                   )
# 216 "CPar.fsy"
                 : 'gentype_Const));
# 1319 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               -1       
                   )
# 217 "CPar.fsy"
                 : 'gentype_Const));
# 1329 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               TypI     
                   )
# 221 "CPar.fsy"
                 : 'gentype_Type));
# 1339 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               TypC     
                   )
# 222 "CPar.fsy"
                 : 'gentype_Type));
# 1349 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                                  [Case(_2,_4)]
                   )
# 226 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1361 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                                           Case(_2,_4) :: _5
                   )
# 227 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1374 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                       [Default(_3)]
                   )
# 228 "CPar.fsy"
                 : 'gentype_StmtCase));
|]
# 1386 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 50;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
