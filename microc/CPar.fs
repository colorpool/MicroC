// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 26 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | DEAL
  | MATCHS
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | INCREASE
  | DECREASE
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | IN
  | RANGE
  | SWITCH
  | CASE
  | DEFAULT
  | MATCH
  | WITH
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_DEAL
    | TOKEN_MATCHS
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_INCREASE
    | TOKEN_DECREASE
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_RANGE
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_DEFAULT
    | TOKEN_MATCH
    | TOKEN_WITH
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VariableDeclareAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type
    | NONTERM_StmtCase
    | NONTERM_StmtPattern

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | DEAL  -> 12 
  | MATCHS  -> 13 
  | NOT  -> 14 
  | SEQOR  -> 15 
  | SEQAND  -> 16 
  | EQ  -> 17 
  | NE  -> 18 
  | GT  -> 19 
  | LT  -> 20 
  | GE  -> 21 
  | LE  -> 22 
  | PLUS  -> 23 
  | MINUS  -> 24 
  | TIMES  -> 25 
  | DIV  -> 26 
  | MOD  -> 27 
  | INCREASE  -> 28 
  | DECREASE  -> 29 
  | CHAR  -> 30 
  | ELSE  -> 31 
  | IF  -> 32 
  | INT  -> 33 
  | NULL  -> 34 
  | PRINT  -> 35 
  | PRINTLN  -> 36 
  | RETURN  -> 37 
  | VOID  -> 38 
  | WHILE  -> 39 
  | FOR  -> 40 
  | IN  -> 41 
  | RANGE  -> 42 
  | SWITCH  -> 43 
  | CASE  -> 44 
  | DEFAULT  -> 45 
  | MATCH  -> 46 
  | WITH  -> 47 
  | CSTSTRING _ -> 48 
  | NAME _ -> 49 
  | CSTINT _ -> 50 
  | CSTBOOL _ -> 51 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_DEAL 
  | 13 -> TOKEN_MATCHS 
  | 14 -> TOKEN_NOT 
  | 15 -> TOKEN_SEQOR 
  | 16 -> TOKEN_SEQAND 
  | 17 -> TOKEN_EQ 
  | 18 -> TOKEN_NE 
  | 19 -> TOKEN_GT 
  | 20 -> TOKEN_LT 
  | 21 -> TOKEN_GE 
  | 22 -> TOKEN_LE 
  | 23 -> TOKEN_PLUS 
  | 24 -> TOKEN_MINUS 
  | 25 -> TOKEN_TIMES 
  | 26 -> TOKEN_DIV 
  | 27 -> TOKEN_MOD 
  | 28 -> TOKEN_INCREASE 
  | 29 -> TOKEN_DECREASE 
  | 30 -> TOKEN_CHAR 
  | 31 -> TOKEN_ELSE 
  | 32 -> TOKEN_IF 
  | 33 -> TOKEN_INT 
  | 34 -> TOKEN_NULL 
  | 35 -> TOKEN_PRINT 
  | 36 -> TOKEN_PRINTLN 
  | 37 -> TOKEN_RETURN 
  | 38 -> TOKEN_VOID 
  | 39 -> TOKEN_WHILE 
  | 40 -> TOKEN_FOR 
  | 41 -> TOKEN_IN 
  | 42 -> TOKEN_RANGE 
  | 43 -> TOKEN_SWITCH 
  | 44 -> TOKEN_CASE 
  | 45 -> TOKEN_DEFAULT 
  | 46 -> TOKEN_MATCH 
  | 47 -> TOKEN_WITH 
  | 48 -> TOKEN_CSTSTRING 
  | 49 -> TOKEN_NAME 
  | 50 -> TOKEN_CSTINT 
  | 51 -> TOKEN_CSTBOOL 
  | 54 -> TOKEN_end_of_input
  | 52 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VariableDeclareAndAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_AtExprNotAccess 
    | 67 -> NONTERM_AtExprNotAccess 
    | 68 -> NONTERM_AtExprNotAccess 
    | 69 -> NONTERM_Access 
    | 70 -> NONTERM_Access 
    | 71 -> NONTERM_Access 
    | 72 -> NONTERM_Access 
    | 73 -> NONTERM_Access 
    | 74 -> NONTERM_Exprs 
    | 75 -> NONTERM_Exprs 
    | 76 -> NONTERM_Exprs1 
    | 77 -> NONTERM_Exprs1 
    | 78 -> NONTERM_Const 
    | 79 -> NONTERM_Const 
    | 80 -> NONTERM_Const 
    | 81 -> NONTERM_Const 
    | 82 -> NONTERM_Type 
    | 83 -> NONTERM_Type 
    | 84 -> NONTERM_StmtCase 
    | 85 -> NONTERM_StmtCase 
    | 86 -> NONTERM_StmtCase 
    | 87 -> NONTERM_StmtPattern 
    | 88 -> NONTERM_StmtPattern 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 54 
let _fsyacc_tagOfErrorTerminal = 52

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | DEAL  -> "DEAL" 
  | MATCHS  -> "MATCHS" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | INCREASE  -> "INCREASE" 
  | DECREASE  -> "DECREASE" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | RANGE  -> "RANGE" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | DEFAULT  -> "DEFAULT" 
  | MATCH  -> "MATCH" 
  | WITH  -> "WITH" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DEAL  -> (null : System.Object) 
  | MATCHS  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | INCREASE  -> (null : System.Object) 
  | DECREASE  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | RANGE  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 18us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 82us; 63us; 83us; 63us; 93us; 63us; 120us; 63us; 121us; 63us; 209us; 63us; 213us; 63us; 217us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 129us; 16us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 93us; 94us; 120us; 122us; 121us; 123us; 209us; 210us; 213us; 214us; 217us; 218us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 128us; 83us; 130us; 54us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 78us; 81us; 79us; 80us; 82us; 57us; 83us; 57us; 87us; 88us; 89us; 90us; 91us; 92us; 93us; 57us; 96us; 97us; 108us; 111us; 109us; 110us; 112us; 115us; 113us; 114us; 116us; 119us; 117us; 118us; 120us; 57us; 121us; 57us; 124us; 125us; 136us; 137us; 139us; 168us; 148us; 149us; 150us; 151us; 169us; 153us; 170us; 154us; 171us; 155us; 172us; 156us; 173us; 157us; 174us; 158us; 175us; 159us; 176us; 160us; 177us; 161us; 178us; 162us; 179us; 163us; 180us; 164us; 181us; 166us; 183us; 165us; 184us; 165us; 195us; 167us; 198us; 168us; 209us; 57us; 213us; 57us; 217us; 57us; 54us; 65535us; 16us; 133us; 43us; 133us; 46us; 133us; 49us; 133us; 52us; 133us; 59us; 133us; 66us; 133us; 67us; 133us; 70us; 133us; 71us; 133us; 73us; 133us; 74us; 133us; 78us; 133us; 79us; 133us; 82us; 133us; 83us; 133us; 87us; 133us; 89us; 133us; 91us; 133us; 93us; 133us; 96us; 133us; 108us; 133us; 109us; 133us; 112us; 133us; 113us; 133us; 116us; 133us; 117us; 133us; 120us; 133us; 121us; 133us; 124us; 133us; 136us; 133us; 139us; 133us; 148us; 133us; 150us; 133us; 169us; 133us; 170us; 133us; 171us; 133us; 172us; 133us; 173us; 133us; 174us; 133us; 175us; 133us; 176us; 133us; 177us; 133us; 178us; 133us; 179us; 133us; 180us; 133us; 181us; 133us; 183us; 134us; 184us; 134us; 195us; 133us; 198us; 133us; 209us; 133us; 213us; 133us; 217us; 133us; 57us; 65535us; 16us; 135us; 43us; 135us; 46us; 135us; 49us; 135us; 52us; 135us; 59us; 135us; 66us; 135us; 67us; 135us; 70us; 135us; 71us; 135us; 73us; 135us; 74us; 135us; 78us; 135us; 79us; 135us; 82us; 135us; 83us; 135us; 87us; 135us; 89us; 135us; 91us; 135us; 93us; 135us; 96us; 135us; 108us; 135us; 109us; 135us; 112us; 135us; 113us; 135us; 116us; 135us; 117us; 135us; 120us; 135us; 121us; 135us; 124us; 135us; 136us; 135us; 139us; 135us; 148us; 135us; 150us; 135us; 169us; 135us; 170us; 135us; 171us; 135us; 172us; 135us; 173us; 135us; 174us; 135us; 175us; 135us; 176us; 135us; 177us; 135us; 178us; 135us; 179us; 135us; 180us; 135us; 181us; 135us; 183us; 135us; 184us; 135us; 192us; 194us; 195us; 135us; 198us; 135us; 207us; 208us; 209us; 135us; 213us; 135us; 215us; 216us; 217us; 135us; 61us; 65535us; 16us; 132us; 43us; 132us; 46us; 132us; 49us; 132us; 52us; 132us; 59us; 132us; 66us; 132us; 67us; 132us; 70us; 132us; 71us; 132us; 73us; 132us; 74us; 132us; 78us; 132us; 79us; 132us; 82us; 132us; 83us; 132us; 85us; 103us; 86us; 102us; 87us; 131us; 89us; 132us; 91us; 132us; 93us; 132us; 96us; 132us; 108us; 132us; 109us; 132us; 112us; 132us; 113us; 132us; 116us; 132us; 117us; 132us; 120us; 132us; 121us; 132us; 124us; 132us; 136us; 132us; 139us; 132us; 142us; 143us; 145us; 146us; 148us; 132us; 150us; 132us; 169us; 132us; 170us; 132us; 171us; 132us; 172us; 132us; 173us; 132us; 174us; 132us; 175us; 132us; 176us; 132us; 177us; 132us; 178us; 132us; 179us; 132us; 180us; 132us; 181us; 132us; 183us; 132us; 184us; 131us; 186us; 187us; 189us; 190us; 192us; 193us; 195us; 132us; 198us; 132us; 209us; 132us; 213us; 132us; 217us; 132us; 1us; 65535us; 139us; 140us; 2us; 65535us; 139us; 197us; 198us; 199us; 57us; 65535us; 16us; 182us; 43us; 182us; 46us; 182us; 49us; 182us; 52us; 182us; 59us; 182us; 66us; 182us; 67us; 182us; 70us; 182us; 71us; 182us; 73us; 182us; 74us; 182us; 78us; 182us; 79us; 182us; 82us; 182us; 83us; 182us; 87us; 182us; 89us; 182us; 91us; 182us; 93us; 182us; 96us; 182us; 108us; 182us; 109us; 182us; 112us; 182us; 113us; 182us; 116us; 182us; 117us; 182us; 120us; 182us; 121us; 182us; 124us; 182us; 136us; 182us; 139us; 182us; 148us; 182us; 150us; 182us; 169us; 182us; 170us; 182us; 171us; 182us; 172us; 182us; 173us; 182us; 174us; 182us; 175us; 182us; 176us; 182us; 177us; 182us; 178us; 182us; 179us; 182us; 180us; 182us; 181us; 182us; 183us; 182us; 184us; 182us; 192us; 182us; 195us; 182us; 198us; 182us; 207us; 182us; 209us; 182us; 213us; 182us; 215us; 182us; 217us; 182us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; 2us; 65535us; 99us; 100us; 210us; 211us; 2us; 65535us; 126us; 127us; 218us; 219us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 61us; 66us; 72us; 89us; 97us; 152us; 207us; 265us; 327us; 329us; 332us; 390us; 400us; 403us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 14us; 8us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 31us; 37us; 1us; 26us; 14us; 27us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 14us; 29us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 29us; 1us; 30us; 1us; 31us; 3us; 31us; 37us; 38us; 1us; 31us; 3us; 31us; 37us; 38us; 16us; 31us; 37us; 38us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 31us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 31us; 3us; 31us; 37us; 38us; 1us; 31us; 1us; 31us; 2us; 31us; 37us; 1us; 31us; 1us; 32us; 2us; 32us; 39us; 1us; 32us; 2us; 32us; 39us; 15us; 32us; 39us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 32us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 32us; 2us; 32us; 39us; 1us; 32us; 2us; 33us; 35us; 3us; 33us; 35us; 40us; 2us; 33us; 70us; 14us; 33us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 33us; 14us; 33us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 33us; 14us; 33us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 14us; 34us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 3us; 35us; 40us; 73us; 2us; 35us; 73us; 1us; 35us; 2us; 35us; 40us; 1us; 35us; 2us; 35us; 40us; 1us; 35us; 2us; 35us; 40us; 15us; 35us; 40us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 35us; 2us; 35us; 40us; 15us; 35us; 40us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 35us; 2us; 35us; 40us; 15us; 35us; 40us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 35us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 35us; 2us; 35us; 40us; 1us; 35us; 2us; 35us; 40us; 1us; 36us; 14us; 36us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 6us; 41us; 44us; 47us; 49us; 70us; 73us; 5us; 41us; 44us; 47us; 49us; 73us; 1us; 42us; 2us; 42us; 67us; 1us; 43us; 1us; 44us; 14us; 44us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 2us; 45us; 69us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 2us; 46us; 73us; 1us; 47us; 1us; 48us; 2us; 48us; 73us; 1us; 49us; 1us; 50us; 14us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 51us; 14us; 51us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 1us; 52us; 14us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 13us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 73us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 76us; 77us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 2us; 67us; 70us; 1us; 67us; 1us; 68us; 2us; 68us; 73us; 1us; 69us; 1us; 70us; 2us; 70us; 73us; 1us; 70us; 2us; 71us; 72us; 2us; 71us; 73us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 75us; 1us; 77us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 2us; 84us; 85us; 2us; 84us; 85us; 2us; 84us; 85us; 2us; 84us; 85us; 1us; 85us; 1us; 86us; 1us; 86us; 1us; 86us; 2us; 87us; 88us; 2us; 87us; 88us; 2us; 87us; 88us; 2us; 87us; 88us; 1us; 88us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 57us; 59us; 62us; 64us; 68us; 70us; 74us; 76us; 79us; 81us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 105us; 107us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 132us; 134us; 136us; 138us; 142us; 144us; 159us; 161us; 164us; 166us; 181us; 183us; 185us; 187us; 191us; 193us; 197us; 214us; 229us; 231us; 235us; 237us; 239us; 242us; 244us; 246us; 249us; 251us; 254us; 270us; 285us; 287us; 290us; 292us; 295us; 299us; 302us; 317us; 319us; 334us; 336us; 351us; 353us; 355us; 357us; 359us; 374us; 376us; 378us; 380us; 382us; 386us; 389us; 391us; 394us; 396us; 399us; 401us; 404us; 420us; 435us; 437us; 440us; 456us; 471us; 473us; 476us; 492us; 507us; 509us; 512us; 514us; 517us; 519us; 534us; 536us; 538us; 540us; 542us; 544us; 551us; 557us; 559us; 562us; 564us; 566us; 581us; 584us; 586us; 588us; 590us; 592us; 595us; 597us; 599us; 602us; 604us; 606us; 621us; 623us; 638us; 640us; 655us; 670us; 685us; 700us; 715us; 730us; 745us; 760us; 775us; 790us; 805us; 820us; 834us; 849us; 864us; 880us; 882us; 884us; 886us; 888us; 890us; 892us; 894us; 896us; 898us; 900us; 902us; 904us; 906us; 908us; 910us; 913us; 915us; 917us; 920us; 922us; 924us; 927us; 929us; 932us; 935us; 937us; 939us; 941us; 943us; 945us; 947us; 949us; 951us; 953us; 955us; 957us; 959us; 961us; 964us; 967us; 970us; 973us; 975us; 977us; 979us; 981us; 984us; 987us; 990us; 993us; |]
let _fsyacc_action_rows = 220
let _fsyacc_actionTableElements = [|3us; 16386us; 30us; 206us; 33us; 205us; 38us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 30us; 206us; 33us; 205us; 38us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 22us; 25us; 20us; 49us; 18us; 3us; 32768us; 1us; 22us; 25us; 20us; 49us; 18us; 3us; 32768us; 1us; 22us; 25us; 20us; 49us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 16392us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 25us; 20us; 49us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 25us; 20us; 49us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 50us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 49us; 30us; 1us; 32768us; 1us; 31us; 2us; 16400us; 30us; 206us; 33us; 205us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 2us; 16400us; 30us; 206us; 33us; 205us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 2us; 32768us; 30us; 206us; 33us; 205us; 0us; 16403us; 22us; 16405us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 30us; 206us; 32us; 65us; 33us; 205us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 77us; 40us; 86us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 1us; 32768us; 4us; 45us; 0us; 16404us; 22us; 16405us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 30us; 206us; 32us; 65us; 33us; 205us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 77us; 40us; 86us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16406us; 1us; 32768us; 7us; 49us; 22us; 16405us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 30us; 206us; 32us; 65us; 33us; 205us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 77us; 40us; 86us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16407us; 1us; 32768us; 7us; 52us; 22us; 16405us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 30us; 206us; 32us; 65us; 33us; 205us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 77us; 40us; 86us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 31us; 74us; 0us; 16410us; 14us; 32768us; 7us; 58us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 0us; 16411us; 14us; 32768us; 1us; 184us; 7us; 60us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16412us; 14us; 32768us; 7us; 62us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 14us; 32768us; 2us; 71us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 14us; 32768us; 2us; 70us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 64us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 76us; 40us; 85us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 65us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 77us; 40us; 86us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 1us; 32768us; 31us; 73us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 64us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 76us; 40us; 85us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 65us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 77us; 40us; 86us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16415us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 14us; 32768us; 2us; 83us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 14us; 32768us; 2us; 82us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 64us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 76us; 40us; 85us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 65us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 77us; 40us; 86us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16416us; 3us; 32768us; 1us; 87us; 25us; 192us; 49us; 188us; 3us; 32768us; 1us; 87us; 25us; 192us; 49us; 188us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 14us; 32768us; 7us; 89us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 14us; 32768us; 7us; 91us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 14us; 32768us; 2us; 93us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 64us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 76us; 40us; 85us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16417us; 1us; 32768us; 1us; 96us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 14us; 32768us; 2us; 98us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 1us; 32768us; 3us; 99us; 2us; 32768us; 44us; 207us; 45us; 212us; 1us; 32768us; 4us; 101us; 0us; 16418us; 2us; 32768us; 5us; 195us; 41us; 105us; 2us; 32768us; 5us; 195us; 41us; 104us; 1us; 32768us; 42us; 106us; 1us; 32768us; 42us; 107us; 1us; 32768us; 1us; 108us; 1us; 32768us; 1us; 109us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 14us; 32768us; 8us; 113us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 14us; 32768us; 8us; 112us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 14us; 32768us; 8us; 117us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 14us; 32768us; 8us; 116us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 14us; 32768us; 2us; 121us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 14us; 32768us; 2us; 120us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 64us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 76us; 40us; 85us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 64us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 76us; 40us; 85us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16419us; 0us; 16419us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 14us; 32768us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 47us; 126us; 1us; 32768us; 13us; 215us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 5us; 16425us; 2us; 191us; 5us; 195us; 9us; 136us; 28us; 144us; 29us; 147us; 4us; 16425us; 5us; 195us; 9us; 136us; 28us; 144us; 29us; 147us; 0us; 16426us; 1us; 16426us; 2us; 185us; 0us; 16427us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 16428us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 1us; 16453us; 1us; 139us; 13us; 16458us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 1us; 32768us; 2us; 141us; 0us; 16429us; 3us; 32768us; 1us; 189us; 25us; 192us; 49us; 188us; 1us; 16430us; 5us; 195us; 0us; 16431us; 3us; 32768us; 1us; 189us; 25us; 192us; 49us; 188us; 1us; 16432us; 5us; 195us; 0us; 16433us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16434us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 16435us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 0us; 16436us; 3us; 16437us; 25us; 171us; 26us; 172us; 27us; 173us; 3us; 16438us; 25us; 171us; 26us; 172us; 27us; 173us; 0us; 16439us; 0us; 16440us; 0us; 16441us; 9us; 16442us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 9us; 16443us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 9us; 16444us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 9us; 16445us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 9us; 16446us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 9us; 16447us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 11us; 16448us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 13us; 32768us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 12us; 16449us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 14us; 32768us; 6us; 196us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 14us; 16460us; 8us; 198us; 15us; 181us; 16us; 180us; 17us; 174us; 18us; 175us; 19us; 176us; 20us; 177us; 21us; 178us; 22us; 179us; 23us; 169us; 24us; 170us; 25us; 171us; 26us; 172us; 27us; 173us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16450us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16451us; 3us; 32768us; 1us; 189us; 25us; 192us; 49us; 188us; 1us; 16452us; 5us; 195us; 0us; 16453us; 3us; 32768us; 1us; 189us; 25us; 192us; 49us; 188us; 2us; 32768us; 2us; 191us; 5us; 195us; 0us; 16454us; 8us; 32768us; 1us; 184us; 10us; 186us; 24us; 202us; 25us; 192us; 34us; 204us; 49us; 188us; 50us; 200us; 51us; 201us; 1us; 16455us; 5us; 195us; 0us; 16456us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16457us; 0us; 16459us; 13us; 32768us; 1us; 184us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 34us; 204us; 35us; 150us; 36us; 152us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 1us; 32768us; 50us; 203us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 6us; 32768us; 1us; 183us; 10us; 186us; 24us; 202us; 34us; 204us; 50us; 200us; 51us; 201us; 1us; 32768us; 11us; 209us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 64us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 76us; 40us; 85us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 2us; 16468us; 44us; 207us; 45us; 212us; 0us; 16469us; 1us; 32768us; 11us; 213us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 64us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 76us; 40us; 85us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 0us; 16470us; 6us; 32768us; 1us; 183us; 10us; 186us; 24us; 202us; 34us; 204us; 50us; 200us; 51us; 201us; 1us; 32768us; 12us; 217us; 20us; 32768us; 1us; 184us; 3us; 43us; 10us; 186us; 14us; 148us; 24us; 202us; 25us; 192us; 28us; 142us; 29us; 145us; 32us; 64us; 34us; 204us; 35us; 150us; 36us; 152us; 37us; 59us; 39us; 76us; 40us; 85us; 43us; 95us; 46us; 124us; 49us; 138us; 50us; 200us; 51us; 201us; 1us; 16471us; 13us; 215us; 0us; 16472us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 19us; 20us; 24us; 28us; 32us; 35us; 37us; 51us; 65us; 66us; 68us; 72us; 74us; 78us; 81us; 82us; 85us; 86us; 88us; 89us; 91us; 93us; 96us; 98us; 100us; 101us; 104us; 106us; 108us; 109us; 110us; 112us; 115us; 116us; 139us; 141us; 142us; 165us; 166us; 168us; 191us; 192us; 194us; 217us; 218us; 219us; 221us; 222us; 237us; 238us; 253us; 254us; 269us; 270us; 271us; 273us; 275us; 289us; 303us; 318us; 333us; 354us; 375us; 377us; 398us; 419us; 420us; 422us; 424us; 438us; 452us; 467us; 482us; 503us; 524us; 525us; 529us; 533us; 547us; 562us; 576us; 591us; 605us; 620us; 641us; 642us; 644us; 658us; 673us; 675us; 678us; 680us; 681us; 684us; 687us; 689us; 691us; 693us; 695us; 709us; 723us; 738us; 753us; 767us; 781us; 796us; 811us; 825us; 839us; 854us; 869us; 890us; 911us; 912us; 913us; 927us; 942us; 944us; 945us; 946us; 947us; 948us; 954us; 959us; 960us; 962us; 963us; 977us; 991us; 993us; 1007us; 1009us; 1010us; 1014us; 1016us; 1017us; 1021us; 1023us; 1024us; 1038us; 1039us; 1053us; 1067us; 1068us; 1072us; 1076us; 1077us; 1078us; 1079us; 1089us; 1099us; 1109us; 1119us; 1129us; 1139us; 1151us; 1165us; 1178us; 1193us; 1208us; 1222us; 1236us; 1250us; 1264us; 1278us; 1292us; 1306us; 1320us; 1334us; 1348us; 1362us; 1376us; 1390us; 1391us; 1405us; 1419us; 1420us; 1424us; 1426us; 1427us; 1431us; 1434us; 1435us; 1444us; 1446us; 1447us; 1461us; 1462us; 1463us; 1477us; 1478us; 1479us; 1480us; 1482us; 1483us; 1484us; 1485us; 1486us; 1493us; 1495us; 1516us; 1519us; 1520us; 1522us; 1543us; 1544us; 1551us; 1553us; 1574us; 1576us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 9us; 7us; 12us; 4us; 7us; 5us; 5us; 12us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; 4us; 5us; 3us; 4us; 5us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 21us; 22us; 22us; 23us; 23us; 23us; 24us; 24us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 16420us; 16421us; 16422us; 16423us; 65535us; 65535us; 16426us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 16431us; 65535us; 65535us; 16433us; 65535us; 65535us; 65535us; 65535us; 16436us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16450us; 65535us; 65535us; 16451us; 65535us; 65535us; 16453us; 65535us; 65535us; 16454us; 65535us; 65535us; 16456us; 65535us; 16457us; 16459us; 65535us; 16461us; 16462us; 16463us; 65535us; 16464us; 16465us; 16466us; 16467us; 65535us; 65535us; 65535us; 65535us; 16469us; 65535us; 65535us; 16470us; 65535us; 65535us; 65535us; 65535us; 16472us; |]
let _fsyacc_reductions ()  =    [| 
# 499 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 508 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               Prog _1 
                   )
# 50 "CPar.fsy"
                 : Absyn.program));
# 519 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               [] 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Topdecs));
# 529 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdecs));
# 541 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 60 "CPar.fsy"
                 : 'gentype_Topdec));
# 552 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               _1 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdec));
# 563 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VariableDeclareAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               VariableDeclareAndAssign(first _1, second _1 , third _1)  
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdec));
# 574 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 80 "CPar.fsy"
                 : 'gentype_Vardec));
# 586 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "CPar.fsy"
                                                        ((fst _2) _1, snd _2 , _4) 
                   )
# 89 "CPar.fsy"
                 : 'gentype_VariableDeclareAndAssign));
# 599 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 95 "CPar.fsy"
                 : 'gentype_Vardesc));
# 610 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 103 "CPar.fsy"
                 : 'gentype_Vardesc));
# 621 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               _2                                      
                   )
# 105 "CPar.fsy"
                 : 'gentype_Vardesc));
# 632 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 643 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 109 "CPar.fsy"
                 : 'gentype_Vardesc));
# 655 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 114 "CPar.fsy"
                 : 'gentype_Fundec));
# 668 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 116 "CPar.fsy"
                 : 'gentype_Fundec));
# 682 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               [] 
                   )
# 121 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 692 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               _1 
                   )
# 122 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 703 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               [_1]     
                   )
# 126 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 714 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 127 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 726 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               Block _2 
                   )
# 132 "CPar.fsy"
                 : 'gentype_Block));
# 737 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               [] 
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 747 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 759 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 771 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VariableDeclareAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                                      DeclareAndAssign(first _1, second _1 , third _1) :: _3 
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 783 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               _1 
                   )
# 143 "CPar.fsy"
                 : 'gentype_Stmt));
# 794 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               _1 
                   )
# 144 "CPar.fsy"
                 : 'gentype_Stmt));
# 805 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 816 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               Return None          
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 826 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 837 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               _1                   
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 848 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 861 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 873 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                                            For(_3,_5,_7,_9)  
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 887 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                                          Switch(_3,_6)
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 899 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_Expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_Expr in
            let _12 = parseState.GetInput(12) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                                                         ForIn(_2, _6, _8, _10, _12)
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 914 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtPattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                         Match(_2,_4)
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtM));
# 926 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtU));
# 939 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 162 "CPar.fsy"
                 : 'gentype_StmtU));
# 951 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 163 "CPar.fsy"
                 : 'gentype_StmtU));
# 963 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_Expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_Expr in
            let _12 = parseState.GetInput(12) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                                                         ForIn(_2, _6, _8, _10, _12)
                   )
# 164 "CPar.fsy"
                 : 'gentype_StmtU));
# 978 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Access _1           
                   )
# 168 "CPar.fsy"
                 : 'gentype_Expr));
# 989 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               _1                  
                   )
# 169 "CPar.fsy"
                 : 'gentype_Expr));
# 1000 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               _1                  
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1011 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1023 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1035 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Increase(_2)        
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1046 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Increase(_1)        
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1057 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Decrease(_2)        
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1068 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Decrease(_1)        
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1079 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1090 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1101 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1111 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1123 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1135 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1147 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1159 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1171 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1183 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1195 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1207 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1219 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1231 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1243 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1255 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1267 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               CstI _1             
                   )
# 203 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1278 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               _2                  
                   )
# 204 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1289 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               Addr _2             
                   )
# 205 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1300 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               AccVar _1           
                   )
# 209 "CPar.fsy"
                 : 'gentype_Access));
# 1311 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               _2                  
                   )
# 210 "CPar.fsy"
                 : 'gentype_Access));
# 1322 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 211 "CPar.fsy"
                 : 'gentype_Access));
# 1333 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 212 "CPar.fsy"
                 : 'gentype_Access));
# 1344 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 213 "CPar.fsy"
                 : 'gentype_Access));
# 1356 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               []       
                   )
# 217 "CPar.fsy"
                 : 'gentype_Exprs));
# 1366 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               _1       
                   )
# 218 "CPar.fsy"
                 : 'gentype_Exprs));
# 1377 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               [_1]     
                   )
# 222 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1388 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 223 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1400 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               _1       
                   )
# 227 "CPar.fsy"
                 : 'gentype_Const));
# 1411 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               _1       
                   )
# 228 "CPar.fsy"
                 : 'gentype_Const));
# 1422 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               - _2     
                   )
# 229 "CPar.fsy"
                 : 'gentype_Const));
# 1433 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               -1       
                   )
# 230 "CPar.fsy"
                 : 'gentype_Const));
# 1443 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               TypI     
                   )
# 234 "CPar.fsy"
                 : 'gentype_Type));
# 1453 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               TypC     
                   )
# 235 "CPar.fsy"
                 : 'gentype_Type));
# 1463 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                                  [Case(_2,_4)]
                   )
# 239 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1475 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                                           Case(_2,_4) :: _5
                   )
# 240 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1488 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                       [Default(_3)]
                   )
# 241 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1499 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "CPar.fsy"
                                                                      [Pattern(_2,_4)]
                   )
# 245 "CPar.fsy"
                 : 'gentype_StmtPattern));
# 1511 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtPattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "CPar.fsy"
                                                                                    Pattern(_2,_4) :: _5
                   )
# 246 "CPar.fsy"
                 : 'gentype_StmtPattern));
|]
# 1525 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 55;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
