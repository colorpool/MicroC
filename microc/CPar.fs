// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c


// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名

// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 28 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | DEAL
  | MATCHS
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | INCREASE
  | DECREASE
  | CHAR
  | ELSE
  | IF
  | INT
  | BOOLEAN
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | DOWHILE
  | DO
  | FOR
  | IN
  | RANGE
  | SWITCH
  | CASE
  | DEFAULT
  | MATCH
  | WITH
  | CSTCHAR of (char)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_DEAL
    | TOKEN_MATCHS
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_INCREASE
    | TOKEN_DECREASE
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_BOOLEAN
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_DOWHILE
    | TOKEN_DO
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_RANGE
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_DEFAULT
    | TOKEN_MATCH
    | TOKEN_WITH
    | TOKEN_CSTCHAR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VariableDeclareAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_CstC
    | NONTERM_Type
    | NONTERM_StmtCase
    | NONTERM_StmtPattern

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | DEAL  -> 12 
  | MATCHS  -> 13 
  | NOT  -> 14 
  | SEQOR  -> 15 
  | SEQAND  -> 16 
  | EQ  -> 17 
  | NE  -> 18 
  | GT  -> 19 
  | LT  -> 20 
  | GE  -> 21 
  | LE  -> 22 
  | PLUS  -> 23 
  | MINUS  -> 24 
  | TIMES  -> 25 
  | DIV  -> 26 
  | MOD  -> 27 
  | INCREASE  -> 28 
  | DECREASE  -> 29 
  | CHAR  -> 30 
  | ELSE  -> 31 
  | IF  -> 32 
  | INT  -> 33 
  | BOOLEAN  -> 34 
  | NULL  -> 35 
  | PRINT  -> 36 
  | PRINTLN  -> 37 
  | RETURN  -> 38 
  | VOID  -> 39 
  | WHILE  -> 40 
  | DOWHILE  -> 41 
  | DO  -> 42 
  | FOR  -> 43 
  | IN  -> 44 
  | RANGE  -> 45 
  | SWITCH  -> 46 
  | CASE  -> 47 
  | DEFAULT  -> 48 
  | MATCH  -> 49 
  | WITH  -> 50 
  | CSTCHAR _ -> 51 
  | CSTSTRING _ -> 52 
  | NAME _ -> 53 
  | CSTINT _ -> 54 
  | CSTBOOL _ -> 55 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_DEAL 
  | 13 -> TOKEN_MATCHS 
  | 14 -> TOKEN_NOT 
  | 15 -> TOKEN_SEQOR 
  | 16 -> TOKEN_SEQAND 
  | 17 -> TOKEN_EQ 
  | 18 -> TOKEN_NE 
  | 19 -> TOKEN_GT 
  | 20 -> TOKEN_LT 
  | 21 -> TOKEN_GE 
  | 22 -> TOKEN_LE 
  | 23 -> TOKEN_PLUS 
  | 24 -> TOKEN_MINUS 
  | 25 -> TOKEN_TIMES 
  | 26 -> TOKEN_DIV 
  | 27 -> TOKEN_MOD 
  | 28 -> TOKEN_INCREASE 
  | 29 -> TOKEN_DECREASE 
  | 30 -> TOKEN_CHAR 
  | 31 -> TOKEN_ELSE 
  | 32 -> TOKEN_IF 
  | 33 -> TOKEN_INT 
  | 34 -> TOKEN_BOOLEAN 
  | 35 -> TOKEN_NULL 
  | 36 -> TOKEN_PRINT 
  | 37 -> TOKEN_PRINTLN 
  | 38 -> TOKEN_RETURN 
  | 39 -> TOKEN_VOID 
  | 40 -> TOKEN_WHILE 
  | 41 -> TOKEN_DOWHILE 
  | 42 -> TOKEN_DO 
  | 43 -> TOKEN_FOR 
  | 44 -> TOKEN_IN 
  | 45 -> TOKEN_RANGE 
  | 46 -> TOKEN_SWITCH 
  | 47 -> TOKEN_CASE 
  | 48 -> TOKEN_DEFAULT 
  | 49 -> TOKEN_MATCH 
  | 50 -> TOKEN_WITH 
  | 51 -> TOKEN_CSTCHAR 
  | 52 -> TOKEN_CSTSTRING 
  | 53 -> TOKEN_NAME 
  | 54 -> TOKEN_CSTINT 
  | 55 -> TOKEN_CSTBOOL 
  | 58 -> TOKEN_end_of_input
  | 56 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VariableDeclareAndAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtM 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_StmtU 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_Expr 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_AtExprNotAccess 
    | 68 -> NONTERM_AtExprNotAccess 
    | 69 -> NONTERM_AtExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_Access 
    | 72 -> NONTERM_Access 
    | 73 -> NONTERM_Access 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Exprs 
    | 77 -> NONTERM_Exprs 
    | 78 -> NONTERM_Exprs1 
    | 79 -> NONTERM_Exprs1 
    | 80 -> NONTERM_Const 
    | 81 -> NONTERM_Const 
    | 82 -> NONTERM_Const 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_CstC 
    | 85 -> NONTERM_Type 
    | 86 -> NONTERM_Type 
    | 87 -> NONTERM_Type 
    | 88 -> NONTERM_StmtCase 
    | 89 -> NONTERM_StmtCase 
    | 90 -> NONTERM_StmtCase 
    | 91 -> NONTERM_StmtPattern 
    | 92 -> NONTERM_StmtPattern 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 58 
let _fsyacc_tagOfErrorTerminal = 56

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | DEAL  -> "DEAL" 
  | MATCHS  -> "MATCHS" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | INCREASE  -> "INCREASE" 
  | DECREASE  -> "DECREASE" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | BOOLEAN  -> "BOOLEAN" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | DOWHILE  -> "DOWHILE" 
  | DO  -> "DO" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | RANGE  -> "RANGE" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | DEFAULT  -> "DEFAULT" 
  | MATCH  -> "MATCH" 
  | WITH  -> "WITH" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DEAL  -> (null : System.Object) 
  | MATCHS  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | INCREASE  -> (null : System.Object) 
  | DECREASE  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | BOOLEAN  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | DOWHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | RANGE  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 19us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 82us; 63us; 83us; 63us; 85us; 63us; 107us; 63us; 127us; 63us; 128us; 63us; 220us; 63us; 224us; 63us; 228us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 136us; 17us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 85us; 86us; 107us; 108us; 127us; 129us; 128us; 130us; 220us; 221us; 224us; 225us; 228us; 229us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 135us; 83us; 137us; 57us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 78us; 81us; 79us; 80us; 82us; 57us; 83us; 57us; 85us; 57us; 88us; 89us; 93us; 94us; 101us; 102us; 103us; 104us; 105us; 106us; 107us; 57us; 115us; 118us; 116us; 117us; 119us; 122us; 120us; 121us; 123us; 126us; 124us; 125us; 127us; 57us; 128us; 57us; 131us; 132us; 143us; 144us; 146us; 176us; 155us; 156us; 157us; 158us; 159us; 160us; 177us; 161us; 178us; 162us; 179us; 163us; 180us; 164us; 181us; 165us; 182us; 166us; 183us; 167us; 184us; 168us; 185us; 169us; 186us; 170us; 187us; 171us; 188us; 172us; 189us; 174us; 192us; 173us; 193us; 173us; 204us; 175us; 207us; 176us; 220us; 57us; 224us; 57us; 228us; 57us; 57us; 65535us; 16us; 140us; 43us; 140us; 46us; 140us; 49us; 140us; 52us; 140us; 59us; 140us; 66us; 140us; 67us; 140us; 70us; 140us; 71us; 140us; 73us; 140us; 74us; 140us; 78us; 140us; 79us; 140us; 82us; 140us; 83us; 140us; 85us; 140us; 88us; 140us; 93us; 140us; 101us; 140us; 103us; 140us; 105us; 140us; 107us; 140us; 115us; 140us; 116us; 140us; 119us; 140us; 120us; 140us; 123us; 140us; 124us; 140us; 127us; 140us; 128us; 140us; 131us; 140us; 143us; 140us; 146us; 140us; 155us; 140us; 157us; 140us; 159us; 140us; 177us; 140us; 178us; 140us; 179us; 140us; 180us; 140us; 181us; 140us; 182us; 140us; 183us; 140us; 184us; 140us; 185us; 140us; 186us; 140us; 187us; 140us; 188us; 140us; 189us; 140us; 192us; 141us; 193us; 141us; 204us; 140us; 207us; 140us; 220us; 140us; 224us; 140us; 228us; 140us; 60us; 65535us; 16us; 142us; 43us; 142us; 46us; 142us; 49us; 142us; 52us; 142us; 59us; 142us; 66us; 142us; 67us; 142us; 70us; 142us; 71us; 142us; 73us; 142us; 74us; 142us; 78us; 142us; 79us; 142us; 82us; 142us; 83us; 142us; 85us; 142us; 88us; 142us; 93us; 142us; 101us; 142us; 103us; 142us; 105us; 142us; 107us; 142us; 115us; 142us; 116us; 142us; 119us; 142us; 120us; 142us; 123us; 142us; 124us; 142us; 127us; 142us; 128us; 142us; 131us; 142us; 143us; 142us; 146us; 142us; 155us; 142us; 157us; 142us; 159us; 142us; 177us; 142us; 178us; 142us; 179us; 142us; 180us; 142us; 181us; 142us; 182us; 142us; 183us; 142us; 184us; 142us; 185us; 142us; 186us; 142us; 187us; 142us; 188us; 142us; 189us; 142us; 192us; 142us; 193us; 142us; 201us; 203us; 204us; 142us; 207us; 142us; 218us; 219us; 220us; 142us; 224us; 142us; 226us; 227us; 228us; 142us; 64us; 65535us; 16us; 139us; 43us; 139us; 46us; 139us; 49us; 139us; 52us; 139us; 59us; 139us; 66us; 139us; 67us; 139us; 70us; 139us; 71us; 139us; 73us; 139us; 74us; 139us; 78us; 139us; 79us; 139us; 82us; 139us; 83us; 139us; 85us; 139us; 88us; 139us; 93us; 139us; 99us; 110us; 100us; 109us; 101us; 138us; 103us; 139us; 105us; 139us; 107us; 139us; 115us; 139us; 116us; 139us; 119us; 139us; 120us; 139us; 123us; 139us; 124us; 139us; 127us; 139us; 128us; 139us; 131us; 139us; 143us; 139us; 146us; 139us; 149us; 150us; 152us; 153us; 155us; 139us; 157us; 139us; 159us; 139us; 177us; 139us; 178us; 139us; 179us; 139us; 180us; 139us; 181us; 139us; 182us; 139us; 183us; 139us; 184us; 139us; 185us; 139us; 186us; 139us; 187us; 139us; 188us; 139us; 189us; 139us; 192us; 139us; 193us; 138us; 195us; 196us; 198us; 199us; 201us; 202us; 204us; 139us; 207us; 139us; 220us; 139us; 224us; 139us; 228us; 139us; 1us; 65535us; 146us; 147us; 2us; 65535us; 146us; 206us; 207us; 208us; 60us; 65535us; 16us; 190us; 43us; 190us; 46us; 190us; 49us; 190us; 52us; 190us; 59us; 190us; 66us; 190us; 67us; 190us; 70us; 190us; 71us; 190us; 73us; 190us; 74us; 190us; 78us; 190us; 79us; 190us; 82us; 190us; 83us; 190us; 85us; 190us; 88us; 190us; 93us; 190us; 101us; 190us; 103us; 190us; 105us; 190us; 107us; 190us; 115us; 190us; 116us; 190us; 119us; 190us; 120us; 190us; 123us; 190us; 124us; 190us; 127us; 190us; 128us; 190us; 131us; 190us; 143us; 190us; 146us; 190us; 155us; 190us; 157us; 190us; 159us; 190us; 177us; 190us; 178us; 190us; 179us; 190us; 180us; 190us; 181us; 190us; 182us; 190us; 183us; 190us; 184us; 190us; 185us; 190us; 186us; 190us; 187us; 190us; 188us; 190us; 189us; 190us; 192us; 190us; 193us; 190us; 201us; 190us; 204us; 190us; 207us; 190us; 218us; 190us; 220us; 190us; 224us; 190us; 226us; 190us; 228us; 190us; 60us; 65535us; 16us; 191us; 43us; 191us; 46us; 191us; 49us; 191us; 52us; 191us; 59us; 191us; 66us; 191us; 67us; 191us; 70us; 191us; 71us; 191us; 73us; 191us; 74us; 191us; 78us; 191us; 79us; 191us; 82us; 191us; 83us; 191us; 85us; 191us; 88us; 191us; 93us; 191us; 101us; 191us; 103us; 191us; 105us; 191us; 107us; 191us; 115us; 191us; 116us; 191us; 119us; 191us; 120us; 191us; 123us; 191us; 124us; 191us; 127us; 191us; 128us; 191us; 131us; 191us; 143us; 191us; 146us; 191us; 155us; 191us; 157us; 191us; 159us; 191us; 177us; 191us; 178us; 191us; 179us; 191us; 180us; 191us; 181us; 191us; 182us; 191us; 183us; 191us; 184us; 191us; 185us; 191us; 186us; 191us; 187us; 191us; 188us; 191us; 189us; 191us; 192us; 191us; 193us; 191us; 201us; 191us; 204us; 191us; 207us; 191us; 218us; 191us; 220us; 191us; 224us; 191us; 226us; 191us; 228us; 191us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; 2us; 65535us; 96us; 97us; 221us; 222us; 2us; 65535us; 133us; 134us; 229us; 230us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 62us; 67us; 73us; 91us; 99us; 157us; 215us; 276us; 341us; 343us; 346us; 407us; 468us; 478us; 481us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 14us; 8us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 31us; 38us; 1us; 26us; 14us; 27us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 14us; 29us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 29us; 1us; 30us; 1us; 31us; 3us; 31us; 38us; 39us; 1us; 31us; 3us; 31us; 38us; 39us; 16us; 31us; 38us; 39us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 31us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 31us; 3us; 31us; 38us; 39us; 1us; 31us; 1us; 31us; 2us; 31us; 38us; 1us; 31us; 1us; 32us; 2us; 32us; 40us; 1us; 32us; 2us; 32us; 40us; 15us; 32us; 40us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 32us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 32us; 2us; 32us; 40us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 14us; 33us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 14us; 34us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 2us; 35us; 36us; 3us; 35us; 36us; 41us; 2us; 35us; 72us; 14us; 35us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 35us; 14us; 35us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 35us; 14us; 35us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 35us; 1us; 35us; 3us; 36us; 41us; 75us; 2us; 36us; 75us; 1us; 36us; 2us; 36us; 41us; 1us; 36us; 2us; 36us; 41us; 1us; 36us; 2us; 36us; 41us; 15us; 36us; 41us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 36us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 36us; 2us; 36us; 41us; 15us; 36us; 41us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 36us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 36us; 2us; 36us; 41us; 15us; 36us; 41us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 36us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 36us; 2us; 36us; 41us; 1us; 36us; 2us; 36us; 41us; 1us; 37us; 14us; 37us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 6us; 42us; 45us; 48us; 50us; 72us; 75us; 5us; 42us; 45us; 48us; 50us; 75us; 1us; 43us; 2us; 43us; 69us; 1us; 44us; 1us; 45us; 14us; 45us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 2us; 46us; 71us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 2us; 47us; 75us; 1us; 48us; 1us; 49us; 2us; 49us; 75us; 1us; 50us; 1us; 51us; 14us; 51us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 52us; 14us; 52us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 53us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 14us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 14us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 14us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 13us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 14us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 14us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 75us; 15us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 78us; 79us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 2us; 69us; 72us; 1us; 69us; 1us; 70us; 2us; 70us; 75us; 1us; 71us; 1us; 72us; 2us; 72us; 75us; 1us; 72us; 2us; 73us; 74us; 2us; 73us; 75us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 77us; 1us; 79us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 87us; 2us; 88us; 89us; 2us; 88us; 89us; 2us; 88us; 89us; 2us; 88us; 89us; 1us; 89us; 1us; 90us; 1us; 90us; 1us; 90us; 2us; 91us; 92us; 2us; 91us; 92us; 2us; 91us; 92us; 2us; 91us; 92us; 1us; 92us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 57us; 59us; 62us; 64us; 68us; 70us; 74us; 76us; 79us; 81us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 105us; 107us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 132us; 134us; 136us; 138us; 142us; 144us; 159us; 161us; 164us; 166us; 181us; 183us; 185us; 187us; 191us; 193us; 197us; 214us; 229us; 231us; 235us; 237us; 239us; 242us; 244us; 246us; 249us; 251us; 254us; 270us; 285us; 287us; 290us; 292us; 294us; 296us; 298us; 300us; 315us; 317us; 319us; 321us; 323us; 338us; 340us; 342us; 344us; 346us; 349us; 353us; 356us; 371us; 373us; 388us; 390us; 405us; 407us; 409us; 413us; 416us; 418us; 421us; 423us; 426us; 428us; 431us; 447us; 462us; 464us; 467us; 483us; 498us; 500us; 503us; 519us; 534us; 536us; 539us; 541us; 544us; 546us; 561us; 563us; 565us; 567us; 569us; 571us; 578us; 584us; 586us; 589us; 591us; 593us; 608us; 611us; 613us; 615us; 617us; 619us; 622us; 624us; 626us; 629us; 631us; 633us; 648us; 650us; 665us; 667us; 682us; 697us; 712us; 727us; 742us; 757us; 772us; 787us; 802us; 817us; 832us; 847us; 862us; 876us; 891us; 906us; 922us; 924us; 926us; 928us; 930us; 932us; 934us; 936us; 938us; 940us; 942us; 944us; 946us; 948us; 950us; 952us; 954us; 957us; 959us; 961us; 964us; 966us; 968us; 971us; 973us; 976us; 979us; 981us; 983us; 985us; 987us; 989us; 991us; 993us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1007us; 1009us; 1012us; 1015us; 1018us; 1021us; 1023us; 1025us; 1027us; 1029us; 1032us; 1035us; 1038us; 1041us; |]
let _fsyacc_action_rows = 231
let _fsyacc_actionTableElements = [|4us; 16386us; 30us; 216us; 33us; 215us; 34us; 217us; 39us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 30us; 216us; 33us; 215us; 34us; 217us; 39us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 22us; 25us; 20us; 53us; 18us; 3us; 32768us; 1us; 22us; 25us; 20us; 53us; 18us; 3us; 32768us; 1us; 22us; 25us; 20us; 53us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 13us; 16392us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 25us; 20us; 53us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 25us; 20us; 53us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 54us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 53us; 30us; 1us; 32768us; 1us; 31us; 3us; 16400us; 30us; 216us; 33us; 215us; 34us; 217us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 3us; 16400us; 30us; 216us; 33us; 215us; 34us; 217us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 3us; 32768us; 30us; 216us; 33us; 215us; 34us; 217us; 0us; 16403us; 25us; 16405us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 30us; 216us; 32us; 65us; 33us; 215us; 34us; 217us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 77us; 42us; 85us; 43us; 100us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 1us; 32768us; 4us; 45us; 0us; 16404us; 25us; 16405us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 30us; 216us; 32us; 65us; 33us; 215us; 34us; 217us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 77us; 42us; 85us; 43us; 100us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16406us; 1us; 32768us; 7us; 49us; 25us; 16405us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 30us; 216us; 32us; 65us; 33us; 215us; 34us; 217us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 77us; 42us; 85us; 43us; 100us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16407us; 1us; 32768us; 7us; 52us; 25us; 16405us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 30us; 216us; 32us; 65us; 33us; 215us; 34us; 217us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 77us; 42us; 85us; 43us; 100us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 31us; 74us; 0us; 16410us; 14us; 32768us; 7us; 58us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 0us; 16411us; 15us; 32768us; 1us; 193us; 7us; 60us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16412us; 14us; 32768us; 7us; 62us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 2us; 71us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 2us; 70us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 64us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 76us; 42us; 85us; 43us; 99us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 65us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 77us; 42us; 85us; 43us; 100us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 1us; 32768us; 31us; 73us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 64us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 76us; 42us; 85us; 43us; 99us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 65us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 77us; 42us; 85us; 43us; 100us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16415us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 2us; 83us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 2us; 82us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 64us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 76us; 42us; 85us; 43us; 99us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 65us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 77us; 42us; 85us; 43us; 100us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16416us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 64us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 76us; 42us; 85us; 43us; 99us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 1us; 32768us; 40us; 87us; 1us; 32768us; 1us; 88us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 2us; 90us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 1us; 32768us; 7us; 91us; 0us; 16417us; 1us; 32768us; 1us; 93us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 2us; 95us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 1us; 32768us; 3us; 96us; 2us; 32768us; 47us; 218us; 48us; 223us; 1us; 32768us; 4us; 98us; 0us; 16418us; 3us; 32768us; 1us; 101us; 25us; 201us; 53us; 197us; 3us; 32768us; 1us; 101us; 25us; 201us; 53us; 197us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 7us; 103us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 7us; 105us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 2us; 107us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 64us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 76us; 42us; 85us; 43us; 99us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16419us; 2us; 32768us; 5us; 204us; 44us; 112us; 2us; 32768us; 5us; 204us; 44us; 111us; 1us; 32768us; 45us; 113us; 1us; 32768us; 45us; 114us; 1us; 32768us; 1us; 115us; 1us; 32768us; 1us; 116us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 8us; 120us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 8us; 119us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 8us; 124us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 8us; 123us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 2us; 128us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 2us; 127us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 64us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 76us; 42us; 85us; 43us; 99us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 64us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 76us; 42us; 85us; 43us; 99us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16420us; 0us; 16420us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 50us; 133us; 1us; 32768us; 13us; 226us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 0us; 16424us; 5us; 16426us; 2us; 200us; 5us; 204us; 9us; 143us; 28us; 151us; 29us; 154us; 4us; 16426us; 5us; 204us; 9us; 143us; 28us; 151us; 29us; 154us; 0us; 16427us; 1us; 16427us; 2us; 194us; 0us; 16428us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 13us; 16429us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 1us; 16455us; 1us; 146us; 14us; 16460us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 1us; 32768us; 2us; 148us; 0us; 16430us; 3us; 32768us; 1us; 198us; 25us; 201us; 53us; 197us; 1us; 16431us; 5us; 204us; 0us; 16432us; 3us; 32768us; 1us; 198us; 25us; 201us; 53us; 197us; 1us; 16433us; 5us; 204us; 0us; 16434us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16435us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 13us; 16436us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 13us; 16437us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 3us; 16438us; 25us; 179us; 26us; 180us; 27us; 181us; 3us; 16439us; 25us; 179us; 26us; 180us; 27us; 181us; 0us; 16440us; 0us; 16441us; 0us; 16442us; 9us; 16443us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 9us; 16444us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 9us; 16445us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 9us; 16446us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 9us; 16447us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 9us; 16448us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 11us; 16449us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 13us; 32768us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 12us; 16450us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 6us; 205us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 16462us; 8us; 207us; 15us; 189us; 16us; 188us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 187us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 181us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16451us; 0us; 16452us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16453us; 3us; 32768us; 1us; 198us; 25us; 201us; 53us; 197us; 1us; 16454us; 5us; 204us; 0us; 16455us; 3us; 32768us; 1us; 198us; 25us; 201us; 53us; 197us; 2us; 32768us; 2us; 200us; 5us; 204us; 0us; 16456us; 9us; 32768us; 1us; 193us; 10us; 195us; 24us; 211us; 25us; 201us; 35us; 213us; 51us; 214us; 53us; 197us; 54us; 209us; 55us; 210us; 1us; 16457us; 5us; 204us; 0us; 16458us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16459us; 0us; 16461us; 14us; 32768us; 1us; 193us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 35us; 213us; 36us; 157us; 37us; 159us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 1us; 32768us; 54us; 212us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 7us; 32768us; 1us; 192us; 10us; 195us; 24us; 211us; 35us; 213us; 51us; 214us; 54us; 209us; 55us; 210us; 1us; 32768us; 11us; 220us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 64us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 76us; 42us; 85us; 43us; 99us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 2us; 16472us; 47us; 218us; 48us; 223us; 0us; 16473us; 1us; 32768us; 11us; 224us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 64us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 76us; 42us; 85us; 43us; 99us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 0us; 16474us; 7us; 32768us; 1us; 192us; 10us; 195us; 24us; 211us; 35us; 213us; 51us; 214us; 54us; 209us; 55us; 210us; 1us; 32768us; 12us; 228us; 22us; 32768us; 1us; 193us; 3us; 43us; 10us; 195us; 14us; 155us; 24us; 211us; 25us; 201us; 28us; 149us; 29us; 152us; 32us; 64us; 35us; 213us; 36us; 157us; 37us; 159us; 38us; 59us; 40us; 76us; 42us; 85us; 43us; 99us; 46us; 92us; 49us; 131us; 51us; 214us; 53us; 145us; 54us; 209us; 55us; 210us; 1us; 16475us; 13us; 226us; 0us; 16476us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 19us; 21us; 22us; 26us; 30us; 34us; 37us; 39us; 54us; 68us; 69us; 71us; 75us; 77us; 81us; 84us; 85us; 88us; 89us; 91us; 92us; 94us; 96us; 100us; 102us; 104us; 105us; 109us; 111us; 113us; 114us; 115us; 117us; 121us; 122us; 148us; 150us; 151us; 177us; 178us; 180us; 206us; 207us; 209us; 235us; 236us; 237us; 239us; 240us; 255us; 256us; 272us; 273us; 288us; 289us; 290us; 292us; 294us; 309us; 324us; 339us; 354us; 377us; 400us; 402us; 425us; 448us; 449us; 451us; 453us; 468us; 483us; 498us; 513us; 536us; 559us; 560us; 583us; 585us; 587us; 602us; 617us; 619us; 620us; 622us; 637us; 652us; 654us; 657us; 659us; 660us; 664us; 668us; 683us; 698us; 713us; 728us; 743us; 758us; 781us; 782us; 785us; 788us; 790us; 792us; 794us; 796us; 811us; 826us; 841us; 856us; 871us; 886us; 901us; 916us; 931us; 946us; 961us; 976us; 999us; 1022us; 1023us; 1024us; 1039us; 1054us; 1056us; 1057us; 1058us; 1059us; 1060us; 1066us; 1071us; 1072us; 1074us; 1075us; 1090us; 1104us; 1106us; 1121us; 1123us; 1124us; 1128us; 1130us; 1131us; 1135us; 1137us; 1138us; 1153us; 1154us; 1169us; 1183us; 1198us; 1212us; 1216us; 1220us; 1221us; 1222us; 1223us; 1233us; 1243us; 1253us; 1263us; 1273us; 1283us; 1295us; 1309us; 1322us; 1337us; 1352us; 1367us; 1382us; 1397us; 1412us; 1427us; 1442us; 1457us; 1472us; 1487us; 1502us; 1517us; 1532us; 1547us; 1548us; 1549us; 1564us; 1579us; 1580us; 1584us; 1586us; 1587us; 1591us; 1594us; 1595us; 1605us; 1607us; 1608us; 1623us; 1624us; 1625us; 1640us; 1641us; 1642us; 1643us; 1645us; 1646us; 1647us; 1648us; 1649us; 1650us; 1651us; 1659us; 1661us; 1684us; 1687us; 1688us; 1690us; 1713us; 1714us; 1722us; 1724us; 1747us; 1749us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 7us; 9us; 12us; 4us; 7us; 5us; 5us; 12us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 4us; 5us; 3us; 4us; 5us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 21us; 22us; 23us; 23us; 23us; 24us; 24us; 24us; 25us; 25us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 16421us; 16422us; 16423us; 16424us; 65535us; 65535us; 16427us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 16432us; 65535us; 65535us; 16434us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16451us; 16452us; 65535us; 65535us; 16453us; 65535us; 65535us; 16455us; 65535us; 65535us; 16456us; 65535us; 65535us; 16458us; 65535us; 16459us; 16461us; 65535us; 16463us; 16464us; 16465us; 65535us; 16466us; 16467us; 16468us; 16469us; 16470us; 16471us; 65535us; 65535us; 65535us; 65535us; 16473us; 65535us; 65535us; 16474us; 65535us; 65535us; 65535us; 65535us; 16476us; |]
let _fsyacc_reductions ()  =    [| 
# 530 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 539 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "CPar.fsy"
                                                               Prog _1 
                   )
# 53 "CPar.fsy"
                 : Absyn.program));
# 550 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "CPar.fsy"
                                                               [] 
                   )
# 58 "CPar.fsy"
                 : 'gentype_Topdecs));
# 560 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 59 "CPar.fsy"
                 : 'gentype_Topdecs));
# 572 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 63 "CPar.fsy"
                 : 'gentype_Topdec));
# 583 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "CPar.fsy"
                                                               _1 
                   )
# 64 "CPar.fsy"
                 : 'gentype_Topdec));
# 594 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VariableDeclareAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "CPar.fsy"
                                                               VariableDeclareAndAssign(first _1, second _1 , third _1)  
                   )
# 65 "CPar.fsy"
                 : 'gentype_Topdec));
# 605 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 83 "CPar.fsy"
                 : 'gentype_Vardec));
# 617 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CPar.fsy"
                                                        ((fst _2) _1, snd _2 , _4) 
                   )
# 92 "CPar.fsy"
                 : 'gentype_VariableDeclareAndAssign));
# 630 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                               ((fun t -> t), (_1)  )                   
                   )
# 98 "CPar.fsy"
                 : 'gentype_Vardesc));
# 641 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 106 "CPar.fsy"
                 : 'gentype_Vardesc));
# 652 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               _2                                      
                   )
# 108 "CPar.fsy"
                 : 'gentype_Vardesc));
# 663 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 110 "CPar.fsy"
                 : 'gentype_Vardesc));
# 674 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Vardesc));
# 686 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 117 "CPar.fsy"
                 : 'gentype_Fundec));
# 699 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Fundec));
# 713 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               [] 
                   )
# 124 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 723 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               _1 
                   )
# 125 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 734 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               [_1]     
                   )
# 129 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 745 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 130 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 757 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Block _2 
                   )
# 135 "CPar.fsy"
                 : 'gentype_Block));
# 768 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               [] 
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 778 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 790 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 802 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VariableDeclareAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                                      DeclareAndAssign(first _1, second _1 , third _1) :: _3 
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 814 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               _1 
                   )
# 146 "CPar.fsy"
                 : 'gentype_Stmt));
# 825 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               _1 
                   )
# 147 "CPar.fsy"
                 : 'gentype_Stmt));
# 836 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 847 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               Return None          
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 857 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 868 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               _1                   
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 879 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 892 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 904 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               DoWhile(_2,_5)
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtM));
# 916 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                                          Switch(_3,_6)
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtM));
# 928 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                                            For(_3,_5,_7,_9)  
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtM));
# 942 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_Expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_Expr in
            let _12 = parseState.GetInput(12) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                                                         ForIn(_2, _6, _8, _10, _12)
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtM));
# 957 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtPattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                         Match(_2,_4)
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtM));
# 969 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 165 "CPar.fsy"
                 : 'gentype_StmtU));
# 982 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 166 "CPar.fsy"
                 : 'gentype_StmtU));
# 994 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 167 "CPar.fsy"
                 : 'gentype_StmtU));
# 1006 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_Expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_Expr in
            let _12 = parseState.GetInput(12) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                                                         ForIn(_2, _6, _8, _10, _12)
                   )
# 168 "CPar.fsy"
                 : 'gentype_StmtU));
# 1021 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Access _1           
                   )
# 172 "CPar.fsy"
                 : 'gentype_Expr));
# 1032 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               _1                  
                   )
# 173 "CPar.fsy"
                 : 'gentype_Expr));
# 1043 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               _1                  
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1054 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1066 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1078 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Increase(_2)        
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1089 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Increase(_1)        
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1100 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Decrease(_2)        
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1111 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Decrease(_1)        
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1122 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1133 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1144 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim1("printc", _2) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1155 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1167 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1179 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1191 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1203 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1215 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1227 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1239 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1251 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1263 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1275 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1287 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1299 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1311 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               CstI _1             
                   )
# 207 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1322 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_CstC in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                         CstC(_1)       
                   )
# 208 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1333 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               _2                  
                   )
# 209 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1344 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               Addr _2             
                   )
# 210 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1355 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               AccVar _1           
                   )
# 214 "CPar.fsy"
                 : 'gentype_Access));
# 1366 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               _2                  
                   )
# 215 "CPar.fsy"
                 : 'gentype_Access));
# 1377 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 216 "CPar.fsy"
                 : 'gentype_Access));
# 1388 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 217 "CPar.fsy"
                 : 'gentype_Access));
# 1399 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 218 "CPar.fsy"
                 : 'gentype_Access));
# 1411 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               []       
                   )
# 222 "CPar.fsy"
                 : 'gentype_Exprs));
# 1421 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               _1       
                   )
# 223 "CPar.fsy"
                 : 'gentype_Exprs));
# 1432 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               [_1]     
                   )
# 227 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1443 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 228 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1455 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               _1       
                   )
# 232 "CPar.fsy"
                 : 'gentype_Const));
# 1466 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               _1       
                   )
# 233 "CPar.fsy"
                 : 'gentype_Const));
# 1477 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               - _2     
                   )
# 234 "CPar.fsy"
                 : 'gentype_Const));
# 1488 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               -1       
                   )
# 235 "CPar.fsy"
                 : 'gentype_Const));
# 1498 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                _1  
                   )
# 239 "CPar.fsy"
                 : 'gentype_CstC));
# 1509 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "CPar.fsy"
                                                               TypI     
                   )
# 244 "CPar.fsy"
                 : 'gentype_Type));
# 1519 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "CPar.fsy"
                                                               TypC     
                   )
# 245 "CPar.fsy"
                 : 'gentype_Type));
# 1529 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "CPar.fsy"
                                                               TypB     
                   )
# 246 "CPar.fsy"
                 : 'gentype_Type));
# 1539 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "CPar.fsy"
                                                                  [Case(_2,_4)]
                   )
# 250 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1551 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "CPar.fsy"
                                                                           Case(_2,_4) :: _5
                   )
# 251 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1564 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "CPar.fsy"
                                                       [Default(_3)]
                   )
# 252 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "CPar.fsy"
                                                                      [Pattern(_2,_4)]
                   )
# 256 "CPar.fsy"
                 : 'gentype_StmtPattern));
# 1587 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtPattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                                                    Pattern(_2,_4) :: _5
                   )
# 257 "CPar.fsy"
                 : 'gentype_StmtPattern));
|]
# 1601 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 59;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
